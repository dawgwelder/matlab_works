clear, clc

f1 = @(x,y1,y2, y3) y2;
f2 = @(x,y1,y2, y3) y3;
f3 = @(x,y1,y2, y3) -29.731*y1;
y10 = 1;
y20 = -3.1;
y30 = 9.61;
a = 0; % нижняя граница диапазона
b = 10; % верхняя граница диапазона
eps = 0.01; % точность
h = (b-a)/100; % начальное значение шага
X = a; % начальное значение времени
Y1 = y10; % 1-я компонента вектора решения 1-го уравнения системы
Y2 = y20 ; % 1-я компонента вектора решения 2-го уравнения системы
Y3 = y30; 
% решение системы методом Рунге-Кутты 4-го порядка
i = 1; k = 0;
while X(end) <= b
    % решение первого уравнения системы
    while 1
        % считаем с исходным шагом
        K1 = h*f1( X(i),Y1(i),Y2(i), Y3(i) );
        L1 = h*f2( X(i),Y1(i),Y2(i), Y3(i) );
        M1 = h*f3( X(i),Y1(i),Y2(i), Y3(i) );
        
K2 = h*f1( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);
L2 = h*f2( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);
M2 = h*f3( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);

K3 = h*f1( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);
L3 = h*f2( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);
M3 = h*f2( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);

        K4 = h*f1( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i) + M3);
        L4 = h*f2( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i) + M3);
        M4 = h*f2( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i) + M3);
        
        y11 = Y1(i) + (K1 + 2*K2 + 2*K3 + K4)/6;
        y12 = Y2(i) + (L1 + 2*L2 + 2*L3 + L4)/6;
        y13 = Y3(i) + (M1 + 2*M2 + 2*M3 + M4)/6;
        
Y1(i+1) = Y1(i) + (K1 + 2*K2+2*K3 + K4)/6;
Y2(i+1) = Y2(i) + (L1 + 2*L2+2*L3 + L4)/6;
Y3(i+1) = Y3(i) + (M1 + 2*M2+2*M3 + M4)/6;
        
        h = h/2; % уменьшаем шаг в двое
        K1 = h*f1( X(i),Y1(i),Y2(i), Y3(i));
        L1 = h*f2( X(i),Y1(i),Y2(i), Y3(i));
        M1 = h*f2( X(i),Y1(i),Y2(i), Y3(i) );
        
        K2 = h*f1( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);
        L2 = h*f2( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);
        M2 = h*f2( X(i)+h/2, Y1(i)+K1/2, Y2(i)+L1/2, Y3(i)+M1/2);
        
        K3 = h*f1( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);
        L3 = h*f2( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);
        M3 = h*f1( X(i)+h/2, Y1(i)+K2/2, Y2(i)+L2/2, Y3(i)+M2/2);
        
        K4 = h*f1( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i)+M3);
        L4 = h*f2( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i)+M3);
        M4 = h*f1( X(i)+h, Y1(i)+K3, Y2(i)+L3, Y3(i)+M3);
        
        y21 = Y1(i) + (K1 + 2*K2 + 2*K3 + K4)/6;
        y22 = Y2(i) + (L1 + 2*L2 + 2*L3 + L4)/6;
        y23 = Y3(i) + (M1 + 2*M2 + 2*M3 + M4)/6;
        
        if max(abs([y11-y21, y12-y22, y13 - y23])) > eps % Если разность больше точности
            h = h/2; % уменьшаем шаг
        else % если подходит
            h = 2*h; % возвращаем назад
            % берем первые значения приращения
            X(i+1) = X(i) + h;
            Y1(i+1) = y11;
            Y2(i+1) = y12;
            Y3(i+1) = y13;
            break
        end
    end
    i = i+1;
    h = 2*h; % увеличиваем шаг для следующей итерации
    k = k+1; % счетчик итераций
    if k > 10000
        disp('Решение не найдено (превышен лимит итераций)')
        break
    end
end
 
plot(X,Y1) % построение графика
grid on % наложение сетки
legend('y1(x)'); 
title('Метод Рунге-Кутты 4-го порядка') % заголовок окна
xlabel('X') % надпись по оси X
ylabel('Y') % надпись по оси Y